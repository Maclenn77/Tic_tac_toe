#!/usr/bin/env ruby
require_relative '../lib/player'
require_relative '../lib/match'

def change_name(boolean_name, player)
  until boolean_name
    puts player.write_name
    player.name = gets.chomp
    boolean_name = player.valid_name(player.name)
  end
  player.name
end

def display_board(hash)
  separator = '----------'
  puts "\n"
  puts " #{hash[1]} | #{hash[2]} | #{hash[3]}"
  puts separator
  puts " #{hash[4]} | #{hash[5]} | #{hash[6]} "
  puts separator
  puts " #{hash[7]} | #{hash[8]} | #{hash[9]} "
  puts "\n"
end

def valid_move(hash)
  move = 0
  until ((1..9).include? move) && (hash.value? move)
    puts 'Write a number between 1 and 9 or \'exit\' to leave.'
    move = gets.chomp
    exit if move == 'exit'
    move = move.to_i
  end
  move
end

def display_result(*args)
  player_name = args[1..-1].detect { |x| x.name == args[0] }
  if player_name
    player_name.change_score
    puts "#{args[0]} won!"
  else
    puts 'It\'s a draw!'
  end
end

# Repeat movements
def loop_match(match, first, second)
  next_player = match.next_turn(first, second)
  while !match.check_winner(next_player) && match.turn < 9 # Check if there's a winner or draw
    match.add_turn
    next_player = match.next_turn(first, second)
    match.place_move(valid_move(match.hash), next_player)
    display_board(match.hash)
  end
  match.result = next_player.name if match.check_winner(next_player)
end

puts "Welcome to the game! \n Player one, what\'s your name?"
name = gets.chomp
first = Player.new(name)
boolean_name = first.valid_name(first.name)
change_name(boolean_name, first) # If invalid name, request to change name

puts "#{first.name} welcome aboard!"

puts 'Player two, what\'s your name?'
name = gets.chomp
second = Player.new(name)
boolean_name = second.valid_name(second.name)
change_name(boolean_name, second)

puts "#{second.name} welcome aboard!"

puts "This is the board of the game, \n
each square has an index number and it starts at 1 and ends at 9. \n
Please write the index number to tell me where are you going to place your move."

keep_playing = 'y'
matches = 0

while keep_playing == 'y'
  match = Match.new(matches + 1)
  matches += 1
  first_move = match.who_is_first?(first, second)
  display_board(match.hash)
  puts "#{first_move.name}, start playing!"
  loop_match(match, first, second)
  display_result(match.result, first, second)
  puts 'Do you want to play again?'
  puts '(y)es / (n)o'
  keep_playing = gets.chomp
  puts match.total_score(first, second, matches)
end

puts 'See you later!'
